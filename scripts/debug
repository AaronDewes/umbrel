#!/bin/bash

# This script is based on raspinfo: https://github.com/raspberrypi/utils/blob/master/raspinfo/raspinfo
# raspinfo is Copyright: 2018-2019, Raspberry Pi (Trading) Ltd.
# This fork is Copyright 2020, Umbrel
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE HOLDERS OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


echo "====================="
echo "= Umbrel debug info ="
echo "====================="

UMBREL_ROOT="$(dirname $(readlink -f "${BASH_SOURCE[0]}"))/.."
cd "${UMBREL_ROOT}"
echo
echo "Umbrel version"
echo "---------------"
cat info.json | jq .version | sed 's/"//g'

if [[ ! -z "${UMBREL_OS:-}" ]]; then
    echo
    echo "Umbrel OS version"
    echo "-----------------"
    echo $UMBREL_OS

    echo
    echo "Raspberry Pi Model"
    echo "------------------"

    cat /proc/cpuinfo | tail -3

    echo
    echo "Firmware"
    echo "--------"

    vcgencmd version

    echo
    echo "Tempature"
    echo "---------"

    vcgencmd measure_temp

    echo
    echo "Throttling"
    echo "----------"

    vcgencmd get_throttled

    echo
    echo "Startup service logs"
    echo "--------------------"
    journalctl --unit=umbrel-startup.service | tail -n 30

    echo
    echo "External storage service logs"
    echo "-----------------------------"
    journalctl --unit=umbrel-external-storage.service | tail -n 30
fi
echo
echo "Filesystem information"
echo "----------------------"

df -h
echo
cat /proc/swaps


echo
echo "Networking Information"
echo "----------------------"
echo

ifconfig | sed -e "s/\([0-9a-fA-F]\{1,4\}:\)\{7,7\}[0-9a-fA-F]\{1,4\}/y.y.y.y.y.y.y.y/g" | sed -e "s/[0-9a-fA-F]\{1,4\}:\(:[0-9a-fA-F]\{1,4\}\)\{1,4\}/y::y.y.y.y/g" | sed -e "s/\([0-9]\{1,3\}\.\)\{3,3\}[0-9]\{1,3\}/x.x.x.x/g" | sed -e "s/\([0-9a-fA-F]\{2,2\}\:\)\{5,5\}[0-9a-fA-F]\{2,2\}/m.m.m.m/g"

echo
echo "Docker containers"
echo "-----------------"

docker ps --format="table {{.Names}}\t{{.Status}}"

echo
echo "Bitcoin Core logs"
echo "-----------------"
echo
docker-compose logs --tail=30 bitcoin

echo
echo "LND logs"
echo "--------"
echo
docker-compose logs --tail=30 lnd

echo
echo "Tor logs"
echo "--------"
echo
docker-compose logs --tail=30 tor

if [[ ! -z "${UMBREL_OS:-}" ]]; then

    list_block_devices () {
        # We need to run sync here to make sure the filesystem is reflecting the
        # the latest changes in /sys/block/sd*
        sync
        # We use "2>/dev/null || true" to swallow errors if there are
        # no block devices. In that case the function just returns nothing
        # instead of an error which is what we want.
        #
        # sed 's!.*/!!' is to return the device path so we get sda
        # instead of /sys/block/sda
        (ls -d /sys/block/sd* 2>/dev/null || true) | sed 's!.*/!!'
    }

    no_of_block_devices=$(list_block_devices | wc -l)
  
    if [[ $no_of_block_devices -lt 1 ]]; then
        echo "================"
        echo "==== Result ===="
        echo "================"
        echo "You have either no external drive connected to your Raspberry Pi or the drive is not being detected."
        exit 0
    fi
    if [[ $no_of_block_devices -gt 1 ]]; then
        echo "================"
        echo "==== Result ===="
        echo "================"
        echo "You have multiple external drives connected to your Raspberry Pi. Please remove the drive(s) you don't want to use for Umbrel."
        exit 0
    fi
fi
echo "================"
echo "==== Result ===="
echo "================"
if [[ ! -z "${UMBREL_OS:-}" ]]; then
    if [[ $(vcgencmd get_throttled) != "throttled=0x0" ]]; then
        echo "There is probably an issue with either your power supply or the temperature of your Raspberry Pi is too high."
        echo $(vcgencmd get_throttled)
        echo 'If the value above starts with "0x5", it is probably a power issue, otherwise it is probably a temperature issue.'
        exit 0
    fi
fi
echo "This script could not automatically detect an issue with your Umbrel."
echo "Please copy the entire output of this script and paste it in the Umbrel Telegram group (https://t.me/getumbrel) so we can help you with your problem."
